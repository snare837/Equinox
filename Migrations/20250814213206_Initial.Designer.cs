// <auto-generated />
using System;
using Equinox.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Equinox.Migrations
{
    [DbContext(typeof(EquinoxContext))]
<<<<<<<< HEAD:Migrations/20250814212116_InitialCreate.Designer.cs
    [Migration("20250814212116_InitialCreate")]
    partial class InitialCreate
========
    [Migration("20250814213206_Initial")]
    partial class Initial
>>>>>>>> bd8db8d (Update ManageMembership):Migrations/20250814213206_Initial.Designer.cs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Equinox.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquinoxClassId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookingId");

                    b.HasIndex("EquinoxClassId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Equinox.Models.ClassCategory", b =>
                {
                    b.Property<int>("ClassCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ClassCategoryId");

                    b.ToTable("ClassCategories");

                    b.HasData(
                        new
                        {
                            ClassCategoryId = 1,
                            Image = "",
                            Name = "Yoga"
                        },
                        new
                        {
                            ClassCategoryId = 2,
                            Image = "",
                            Name = "HIIT"
                        },
                        new
                        {
                            ClassCategoryId = 3,
                            Image = "",
                            Name = "Boxing"
                        });
                });

            modelBuilder.Entity("Equinox.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClubId");

                    b.ToTable("Clubs");

                    b.HasData(
                        new
                        {
                            ClubId = 1,
                            Name = "Chicago Loop",
                            PhoneNumber = "312-987-7223"
                        },
                        new
                        {
                            ClubId = 2,
                            Name = "West Chicago",
                            PhoneNumber = "982-123-7690"
                        },
                        new
                        {
                            ClubId = 3,
                            Name = "Lincoln Park",
                            PhoneNumber = "290-734-1890"
                        });
                });

            modelBuilder.Entity("Equinox.Models.EquinoxClass", b =>
                {
                    b.Property<int>("EquinoxClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassPicture")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClubId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquinoxClassId");

                    b.HasIndex("ClassCategoryId");

                    b.HasIndex("ClubId");

                    b.HasIndex("UserId");

                    b.ToTable("EquinoxClasses");

                    b.HasData(
                        new
                        {
                            EquinoxClassId = 1,
                            ClassCategoryId = 1,
                            ClassDay = "Monday",
                            ClassPicture = "yoga1.jpg",
                            ClubId = 1,
                            Name = "Morning Yoga",
                            Time = "8 AM – 9 AM",
                            UserId = 1
                        },
                        new
                        {
                            EquinoxClassId = 2,
                            ClassCategoryId = 2,
                            ClassDay = "Wednesday",
                            ClassPicture = "pilates1.jpg",
                            ClubId = 2,
                            Name = "Evening Pilates",
                            Time = "6 PM – 7 PM",
                            UserId = 2
                        },
                        new
                        {
                            EquinoxClassId = 3,
                            ClassCategoryId = 3,
                            ClassDay = "Friday",
                            ClassPicture = "boxing1.jpg",
                            ClubId = 3,
                            Name = "Boxing Basics",
                            Time = "5 PM – 6 PM",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Equinox.Models.Membership", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MembershipId");

                    b.ToTable("Memberships");
<<<<<<<< HEAD:Migrations/20250814212116_InitialCreate.Designer.cs
========

                    b.HasData(
                        new
                        {
                            MembershipId = 1,
                            Name = "Annual",
                            Price = "1000"
                        },
                        new
                        {
                            MembershipId = 2,
                            Name = "Monthly",
                            Price = "100"
                        },
                        new
                        {
                            MembershipId = 3,
                            Name = "PunchCard",
                            Price = "10"
                        });
>>>>>>>> bd8db8d (Update ManageMembership):Migrations/20250814213206_Initial.Designer.cs
                });

            modelBuilder.Entity("Equinox.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCoach")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Coaches");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DOB = new DateTime(2000, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johndoe@temp.com",
                            IsCoach = true,
                            Name = "John Doe",
                            PhoneNumber = "341-897-8129"
                        },
                        new
                        {
                            UserId = 2,
                            DOB = new DateTime(1986, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janesmith@temp.com",
                            IsCoach = true,
                            Name = "Jane Smith",
                            PhoneNumber = "893-129-0910"
                        },
                        new
                        {
                            UserId = 3,
                            DOB = new DateTime(1075, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bettypage@demo.com",
                            IsCoach = true,
                            Name = "Betty Page",
                            PhoneNumber = "389-090-0010"
                        });
                });

            modelBuilder.Entity("Equinox.Models.Booking", b =>
                {
                    b.HasOne("Equinox.Models.EquinoxClass", "EquinoxClass")
                        .WithMany()
                        .HasForeignKey("EquinoxClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquinoxClass");
                });

            modelBuilder.Entity("Equinox.Models.EquinoxClass", b =>
                {
                    b.HasOne("Equinox.Models.ClassCategory", "ClassCategory")
                        .WithMany()
                        .HasForeignKey("ClassCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Equinox.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Equinox.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClassCategory");

                    b.Navigation("Club");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
